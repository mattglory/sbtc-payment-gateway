# sBTC Payment Gateway Environment Configuration
# Copy this file to .env and update with your values

# =================================
# APPLICATION CONFIGURATION
# =================================
NODE_ENV=development
PORT=3001
HOST=0.0.0.0
APP_VERSION=1.0.0
LOG_LEVEL=info

# =================================
# STACKS BLOCKCHAIN CONFIGURATION  
# =================================
# Network: mainnet or testnet
STACKS_NETWORK=testnet

# Your deployed smart contract address
CONTRACT_ADDRESS=ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM

# Private key for deployer account (for contract interactions)
# Generate with: npx @stacks/cli make_keychain
# Test private key for development/testing (never use in production!)
DEPLOYER_PRIVATE_KEY=753b7cc01a1a2e86221266a154af739463fce51219d97e4f856cd7200c3bd2a601

# Stacks API endpoint (leave empty for default)
STACKS_API_URL=

# =================================
# API CONFIGURATION
# =================================
# Demo mode allows testing without real API keys (set to false for production)
DEMO_MODE=false

# Comma-separated list of production API keys
# Format: pk_live_key1,pk_live_key2,pk_test_key3
API_KEYS=pk_test_demo,pk_test_your_key,pk_test_123

# JWT secret for API key generation
JWT_SECRET=your_jwt_secret_here

# =================================
# CORS AND SECURITY
# =================================
# Allowed origins for CORS (comma-separated)
CORS_ORIGINS=http://localhost:3000,https://sbtcpaymentgateway.vercel.app

# Rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# =================================
# DATABASE CONFIGURATION
# =================================
# PostgreSQL Database Configuration
DB_HOST=localhost
DB_PORT=5432
DB_NAME=sbtc_gateway
DB_USER=postgres
DB_PASSWORD=your_password_here

# Database Pool Settings
DB_MAX_CONNECTIONS=20
DB_MIN_CONNECTIONS=5
DB_IDLE_TIMEOUT=30000
DB_CONNECTION_TIMEOUT=10000
DB_QUERY_TIMEOUT=30000

# SSL Configuration (for production)
DB_SSL_REJECT_UNAUTHORIZED=true

# =================================
# MONITORING AND LOGGING
# =================================
# Enable health check monitoring
ENABLE_MONITORING=true

# Webhook endpoints for notifications
WEBHOOK_ENDPOINTS=

# Error reporting service (optional)
SENTRY_DSN=

# =================================
# BITCOIN CONFIGURATION
# =================================
# Bitcoin network: mainnet or testnet
BITCOIN_NETWORK=testnet

# Bitcoin address seed for deterministic address generation (change in production)
BITCOIN_ADDRESS_SEED=demo-seed-change-in-production

# Required confirmations for Bitcoin deposits (typically 6 for mainnet, 1-3 for testnet)
BITCOIN_CONFIRMATIONS=6

# Bitcoin address monitoring interval in milliseconds (60000 = 1 minute)
BITCOIN_MONITORING_INTERVAL=60000

# Maximum addresses to poll per monitoring cycle (to respect API limits)
BITCOIN_POLL_LIMIT=100

# =================================
# DEVELOPMENT CONFIGURATION
# =================================
# Enable debug mode in development
DEBUG=false

# Enable API documentation in development
ENABLE_API_DOCS=true

# Test configuration
ENABLE_TEST_ENDPOINTS=false